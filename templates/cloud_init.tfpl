#cloud-config

# Disk setup
resize_rootfs: false

# Setup hostname and /etc/hosts 
hostname: ${name}
manage_etc_hosts: true

disable_root: true
ssh_pwauth: no
password: ${host.rootpassword}
ssh_authorized_keys:
  -  ${host.public_key}
ssh_keys:
  rsa_private: | 
    ${indent(4, host.private_key)}

groups:
%{for id, group in host.groups ~}
  - ${group}
%{endfor ~}

users:
  - default
%{for id, user in host.users ~}
  - name: ${id}
    plain_text_passwd: ${user.password}
    lock_passwd: false
%{if can(user.sudo) ~}
    sudo: ${user.sudo}
%{~ endif}
%{if can(user.groups) ~}
    groups: ${user.groups}
%{~ endif ~}
%{if can (user.public_key) ~}
%{if user.public_key != ""}
    ssh_authorized_keys:
      -  ${user.public_key}
%{endif ~}
%{endif ~}
    shell: ${user.shell}
%{endfor ~}

packages:
  - fail2ban
  - ufw
  - curl
  - libpam-cracklib
  - bc
  - zsh
  - git

package_upgrade: false

write_files:
- content: |
    ${indent(4, cronscript)}
  path: /home/root/broadcast.sh
  permissions: '0755'
- content: |
    */10 * * * * root /home/root/broadcast.sh
  path: /etc/crontab
  append: true

runcmd:
  - echo "Set sudo password rules"
  - sed -i -e '$aDefaults badpass_message="Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you"' /etc/sudoers
  - sed -i -e '$aDefaults passwd_tries=3' /etc/sudoers
  - echo "Add sudo log rule"
  - mkdir /var/log/sudo
  - sed -i -e '$aDefaults log_input,log_output' /etc/sudoers
  - sed -i -e '$aDefaults iolog_dir="/var/log/sudo"' /etc/sudoers
  - sed -i -e '$aDefaults requiretty' /etc/sudoers
  - echo "Add password policy"
  - sed -i "/^PASS_MAX_DAYS.*/c\PASS_MAX_DAYS\t30" /etc/login.defs
  - sed -i "/^PASS_MIN_DAYS.*/c\PASS_MIN_DAYS\t2" /etc/login.defs
  - sed -i "/^PASS_WARN_AGE.*/c\PASS_WARN_AGE\t7" /etc/login.defs
  - sed -i -e '$apassword required pam_cracklib.so minlen=10 lcredit=-1 ucredit=-1 dcredit=-1 difok=7 maxrepeat=3 reject_username' /etc/pam.d/common-password
  - echo "Set SSH config"
  - systemctl stop ssh
  - sed -i -e '/^\(#\|\)PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)PasswordAuthentication/s/^.*$/PasswordAuthentication yes/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)MaxAuthTries/s/^.*$/MaxAuthTries 2/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowTcpForwarding/s/^.*$/AllowTcpForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
%{for id, user in host.users ~}
  - sed -i '$a AllowUsers ${id}' /etc/ssh/sshd_config
%{endfor ~}
  - sed -i "s/#Port 22/Port 4242/" /etc/ssh/sshd_config
  - systemctl start ssh
  - systemctl enable ssh
  - echo "Set UFW firewall rules"
  - sudo ufw allow 4242
  - ufw enable
  - echo "Set fail2ban rules"
  - systemctl stop fail2ban
  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport" > /etc/fail2ban/jail.local
  - systemctl enable fail2ban
  - systemctl restart fail2ban
  - echo "Install Cloudflared"
  - curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb 
  - dpkg -i cloudflared.deb
  - cloudflared service install ${host.cf_tun_key}
  - sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
